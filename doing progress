

1-3  若httpheader中找不到编码格式，就在meta中获取网页中的编码格式，
		为了获取charset，要写一个对应的匹配正则类来完成任务
		
1-12 完善正则匹配工具类，RegexUtil
1-14 完善WebpageDownloadUtil.java
	 学习http-client
	 
1-16 继续了解http—client 观看完成视频17
1-17 已初步完成WebpageDownloadUtil4HttpClient  并完善了方法持久化网页内容和其中编码
1-29  ---回顾了runnable接口产生线程的方式
		下载过程 应该是多线程 两个线程 一个产生任务，另一个完成下载任务 
		1、线程的两种方式
			1.1.继承Thread类
				优点：简单、直接、可启动
				缺点：java是单继承，影响本类的后续继承扩展性
			1.2.实现Runnable接口
				优点：实现接口，基础无影响
				缺点：不如Thread直接
		2、线程生命周期：新建、就绪、运行、阻塞、死亡
		3、重写的要求/条件
			3.1继承
			3.2方法名
1-30  将下载任务放入线程中执行，已经将能完成下载过程 -v28
1-31  log4j的使用，几种级别，warn error debug info等
		设计多线程的设计时，大多数情况下：均是生产者消费者模式的设计
		1、 UIManager，以及产生taskpojo的位置-parser解析完之后，就会产生
		2、消费者：DownLoadRunnable
		3、缓冲池-资源池：TaskSchedule
	  完成了downloadManager中几个线程的开启执行和关闭 
2-1  完善了downloadmanager类，将原有的功能封装为一个一个的方法，后续学习如何读取配置文件